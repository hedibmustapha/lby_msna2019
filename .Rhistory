library(dplyr)
source("code/data_merge_functions.R")
source("code/functions.R")
rounded_mean <- function(...){
round(...,digits = 0)
}
questions <- read.csv("./input/edited_survey_datamerge.csv", stringsAsFactors = F)
choices <- read.csv("./input/edited_choices_datamerge.csv", stringsAsFactors = F)
choices$label..English..en. <- gsub("^\\d+[.]\\s*","", choices$label..English..en.)
data <- load_data(file = "./input/data.csv")
data <- mutate_if(data, is.character, na_if, "")
sampling_frame <- load_samplingframe(file = "./input/sampling_frame.csv")
questionnaire <- load_questionnaire(data = data,
questions = questions,
choices = choices,
choices.label.column.to.use = "label::English (en)")
weights <-map_to_weighting(sampling.frame = sampling_frame,
data.stratum.column = "strata.names",
sampling.frame.population.column = "population",
sampling.frame.stratum.column = "strata.names",
data = data)
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan_24012020.csv")
ci_prep_data <- data %>% mutate(
problems_faced_returnees = str_concat("yes",
house_occupied,
inability_prove_legal_ownership,
hostility_from_local_community,
lack_security_area,
parts_house_property_destroyed,
missing_valuables_house_property,
inability_move_freely,
basic_services_hh_nolonger_working,
basic_services_community_nolonger_working,
mobilephone_network_nolonger_working,
other_problem_faced),
total_income = rowSums(select(.,gvt_salary,gvt_social_benefits,non_gvt_salary,casual_labour,
own_business_income,
remittances,
family_support,humanitarian_assistance,zakat,income_other)
, na.rm=T),
total_income_without_0 = ifelse(total_income ==0, NA, total_income),
age_dependecny_ratio = (nb_infants_male+nb_children_male+nb_infants_female+nb_children_female+
nb_elderly_male+nb_elderly_female) / (nb_youth_male+nb_youth_male+nb_adults_male+nb_adults_female),
working_minors_nb = rowSums(select(.,calcul_jobs_minors_male_nb,calcul_jobs_minors_female_nb),na.rm = T),
enrolled_notattending = rowSums(select(.,enrolled_school_male_6_14:enrolled_school_female_15_17),na.rm = T)-
rowSums(select(.,attended_school_male_6_14:attended_school_female_15_17),na.rm = T),
not_enrolled = rowSums(select(.,school_aged_boys,school_aged_girls),na.rm = T)-
rowSums(select(.,enrolled_school_male_6_14:enrolled_school_female_15_17),na.rm = T),
fcs = (cereals * 2) + (legumes * 3) + veggies + fruits + (meat * 4) + (dairy * 4) + (fats * 0.5) + (sugar * 0.5),
fcs_category = case_when(
fcs <= 28 ~ "poor",
fcs > 28 & fcs <= 42 ~ "borderline",
fcs > 42 ~ "acceptable"
),
rcsi = less_expensive_quality + (borrow_relatives * 2) + reduce_number_meals + (reduce_adult * 3) + shrink_meals,
rcsi_category = case_when(
rcsi <= 3 ~ "low",
rcsi > 3 & rcsi <= 9 ~ "medium",
rcsi > 9 ~ "high"
),
cash_coping_stress = rowSums(select(.,
sold_nonproductive_hh_assets,
spent_savings,
borrowed_purchased_oncredit_food,
reduced_expenditures_essential_nfi) %>%
mutate_all(~ .x %in% c("already_exhausted_this_coping_strategy", "yes")),
na.rm = T),
cash_coping_crisis = rowSums(select(.,
sold_productive_hh_assets,
borrowed_money,
reduced_expenditures_health_education,
took_additional_job) %>%
mutate_all(~ .x %in% c("already_exhausted_this_coping_strategy", "yes")),
na.rm = T),
cash_coping_emergency = rowSums(select(.,
begging,
adult_accepting_degrading_illegal_work,
minor_accepting_degrading_illegal_work,
child_marriage) %>%
mutate_all(~ .x %in% c("already_exhausted_this_coping_strategy", "yes")),
na.rm = T),
cash_coping = case_when(
cash_coping_emergency > 0 ~ "emergency",
cash_coping_crisis > 0 ~ "crisis",
cash_coping_stress > 0 ~ "stress",
cash_coping_emergency + cash_coping_crisis + cash_coping_stress == 0 ~ "none"
),
have_docs_inprocess = rowSums(select(.,
property_docs:other_docs) %>%
mutate_all(~ .x %in% c("everyone_has_legal_doc","process_renewing_doc")),
na.rm = T),
dont_have_cannot_obtain_docs = rowSums(select(.,
property_docs:other_docs) %>%
mutate_all(~ .x %in% c("not_everyone_has_legal_doc",
"unable_obtain_doc",
"lost_doc_conflict")),
na.rm = T),
minor_some_difficulties = rowSums(select(.,starts_with("minor_difficulties_carrying_activities"),
starts_with("some_difficulties_carrying_activities")),
na.rm = T),
alot_cannot_difficulties = rowSums(select(.,starts_with("alot_difficulties_carrying_activities"),
starts_with("cannot_carry_activities")),
na.rm = T)
)
many_records <- read.csv("./input/libyan_msna_composite_indicator_v1.csv")
ci_data <- ci_prep_data %>% recode_batch(tos = many_records$to_values,
wheres = many_records$conditions,
targets = many_records$target_variables,
questionnaire = questionnaire) %>%
end_recoding()
composite_data <- ci_data %>%
mutate(preexisting_vulnerability_score = ifelse(preexisting_vulnerability_index1 >= 3 & !is.na(preexisting_vulnerability_index1) |
preexisting_vulnerability_index6 >= 3 & !is.na(preexisting_vulnerability_index6) |
preexisting_vulnerability_index7 >= 3 & !is.na(preexisting_vulnerability_index7),
pmax(preexisting_vulnerability_index1,preexisting_vulnerability_index6,
preexisting_vulnerability_index7, na.rm = T),
rounded_mean(rowMeans(select(., preexisting_vulnerability_index1:preexisting_vulnerability_index7), na.rm = T))),
impact_score = ifelse(impact_index5 >= 3 & !is.na(impact_index5)|
impact_index8 >= 3 & !is.na(impact_index8)|
impact_index1 >= 3 & !is.na(impact_index1),
pmax(impact_index1,impact_index5,impact_index8,na.rm = T),
rounded_mean(rowMeans(select(., impact_index1:impact_index9), na.rm = T))),
protection_score = ifelse(protection_index2 >= 3 & !is.na(protection_index2) |
protection_index5 >= 3 & !is.na(protection_index5),
pmax(protection_index2,protection_index5,na.rm = T),
rounded_mean(rowMeans(select(.,protection_index1:protection_index6), na.rm = T))),
shelter_nfi_score = ifelse(shelter_nfi_index2 >= 3 & !is.na(shelter_nfi_index2)|
shelter_nfi_index1 >= 3 & !is.na(shelter_nfi_index1),
pmax(shelter_nfi_index1,shelter_nfi_index2,na.rm = T),
rounded_mean(rowMeans(select(., shelter_nfi_index1:shelter_nfi_index4), na.rm = T))),
fs_score = ifelse(fcs_index1 >= 4 & !is.na(fcs_index1),
fcs_index1,
rounded_mean(rowMeans(select(., fcs_index1:fcs_index4), na.rm = T))),
health_score = health_index1,
wash_score = ifelse(wash_index1 >= 3 & !is.na(wash_index1) |
wash_index3 >= 3 & !is.na(wash_index3),
pmax(wash_index1,wash_index3,na.rm = T),
rounded_mean(rowMeans(select(., wash_index1:wash_index5), na.rm = T))),
education_score = ifelse(education_index2 >= 4 & !is.na(education_index2) |
education_index1 >= 3 & !is.na(education_index1),
pmax(education_index1,education_index2,na.rm = T),
rounded_mean(rowMeans(select(., education_index1:education_index2), na.rm = T))),
capacity_gap_score = capacitygap_index1
)
lsg_three_four <- composite_data %>% mutate(
protection = ifelse(protection_score >=3,1,0),
shelter = ifelse(shelter_nfi_score >=3,1,0),
fs = ifelse(fs_score >=3,1,0),
health = ifelse(health_score>=3,1,0),
wash = ifelse(health_score>=3,1,0),
education = ifelse(education_score>=3,1,0),
capacity_gap = ifelse(capacity_gap_score>=3,1,0),
vul_atlease_one = ifelse(protection+shelter+fs+health+wash+education+capacity_gap>=1,"yes","no")
)
library(questionr)
wtd.table(lsg_three_four$vul_atlease_one,weights(lsg_three_four),na.rm = T)
wtd.table(lsg_three_four$vul_atlease_one,weights = weights(lsg_three_four),na.rm = T)
wtd.table(lsg_three_four$vul_atlease_one,weights = weights(lsg_three_four),na.rm = T,digits = 0)
wtd.table(lsg_three_four$vul_atlease_one,weights = weights(lsg_three_four),na.rm = T,digits = 1)
wtd.table(lsg_three_four$vul_atlease_one,weights = weights(lsg_three_four), digits = 0,na.rm = T)
1937+3059
table(is.na(lsg_three_four$vul_atlease_one))
1937+3059+38
3059/4996
library(Setviz)
library("UpSetR")
library(data.table)
library(purrr)
lsg_three_four$protection
setnames(x = lsg_three_four,
old = c("protection", "shelter", "fs", "health", "wash", "education", "capacity_gap"),
new = c("Protection", "Shelter_NFI", "FSL", "Health", "WASH", "Education", "Capacity_gap"))
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 6)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weight_variable = weights(data))
lsg_three_four$weights= weights(data)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weight_variable = weights)
lsg_three_four$weights
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weight_variable = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weight_variable = "weights")
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weight_variable = "weights")
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weight_variable = lsg_three_four$weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 6,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weighting_function = weights)
weights
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = F,
exclude_unique = F,
round_to_1_percent = T,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets =T,
exclude_unique = T,
round_to_1_percent = T,
nintersects = 5,
weighting_function = weights)
browseVignettes("Setviz")
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets =T,
exclude_unique = T,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = F,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
table(lsg_three_four$Capacity_gap)
3023/(3023+2035) * 100
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
summary.stats.list <- results$results
## SUMMARY STATS LIST FORMATTED WITH p-VALUES ##
summary.stats.list %>%
#lapply((map_to_labeled),questionnaire) %>%
lapply(result_format_numbers) %>%
lapply(add_p_value_to_summary_table) %>%
resultlist_summary_statistics_as_one_table %>%
write.csv("./output/summary_stats_persector.csv")
lsg_three_four <- composite_data %>% mutate(
protection = ifelse(protection_score >=3,1,0),
shelter = ifelse(shelter_nfi_score >=3,1,0),
fs = ifelse(fs_score >=3,1,0),
health = ifelse(health_score>=3,1,0),
wash = ifelse(health_score>=3,1,0),
education = ifelse(education_score>=3,1,0),
capacity_gap = ifelse(capacity_gap_score>=3,1,0),
vul_atlease_one = ifelse(protection+shelter+fs+health+wash+education+capacity_gap>=1,"yes","no")
)
lsg_three_four$protection
setnames(x = lsg_three_four,
old = c("protection", "shelter", "fs", "health", "wash", "education", "capacity_gap"),
new = c("Protection", "Shelter_NFI", "FSL", "Health", "WASH", "Education", "Capacity_gap"))
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
View(summary.stats.list)
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
## SUMMARY STATS LIST FORMATTED WITH p-VALUES ##
summary.stats.list %>%
#lapply((map_to_labeled),questionnaire) %>%
lapply(result_format_numbers) %>%
lapply(add_p_value_to_summary_table) %>%
resultlist_summary_statistics_as_one_table %>%
write.csv("./output/summary_stats_persector.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
View(results)
group_diff_case <- map_to_case(hypothesis.type = "group_difference",
dependent.var.type = "numerical",
independent.var.type = "categorical")
map_to_result(data = lsg_three_four,
dependent.var = "protection",
independent.var = "displacement_status",
case = group_diff_case)
lsg_three_four$Protection
lsg_three_four$protection
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
## SUMMARY STATS LIST FORMATTED WITH p-VALUES ##
summary.stats.list %>%
#lapply((map_to_labeled),questionnaire) %>%
lapply(result_format_numbers) %>%
lapply(add_p_value_to_summary_table) %>%
resultlist_summary_statistics_as_one_table %>%
write.csv("./output/summary_stats_persector.csv")
lsg_three_four$Shelter_NFI
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
View(analysisplan)
data$displacement_group
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
## SUMMARY STATS LIST FORMATTED WITH p-VALUES ##
summary.stats.list %>%
#lapply((map_to_labeled),questionnaire) %>%
lapply(result_format_numbers) %>%
lapply(add_p_value_to_summary_table) %>%
resultlist_summary_statistics_as_one_table %>%
write.csv("./output/summary_stats_persector.csv")
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
## SUMMARY STATS LIST FORMATTED WITH p-VALUES ##
summary.stats.list %>%
#lapply((map_to_labeled),questionnaire) %>%
lapply(result_format_numbers) %>%
lapply(add_p_value_to_summary_table) %>%
resultlist_summary_statistics_as_one_table %>%
write.csv("./output/summary_stats_persector.csv")
lsg_three_four$displacement_status
lsg_three_four$Protection
lsg_three_four <- composite_data %>% mutate(
protection = ifelse(protection_score >=3,1,0),
shelter = ifelse(shelter_nfi_score >=3,1,0),
fs = ifelse(fs_score >=3,1,0),
health = ifelse(health_score>=3,1,0),
wash = ifelse(health_score>=3,1,0),
education = ifelse(education_score>=3,1,0),
capacity_gap = ifelse(capacity_gap_score>=3,1,0),
vul_atlease_one = ifelse(protection+shelter+fs+health+wash+education+capacity_gap>=1,"yes","no")
)
analysisplan <- load_analysisplan(file = "./input/composite_indicators_analysisplan2.csv")
results <- from_analysisplan_map_to_output(data = lsg_three_four,
analysisplan = analysisplan,
weighting = weights,
questionnaire = questionnaire
)
summary.stats.list <- results$results
## SUMMARY STATS LIST FORMATTED WITH p-VALUES ##s
summary.stats.list %>%
#lapply((map_to_labeled),questionnaire) %>%
lapply(result_format_numbers) %>%
lapply(add_p_value_to_summary_table) %>%
resultlist_summary_statistics_as_one_table %>%
write.csv("./output/summary_stats_persector.csv")
View(results)
lsg_three_four %>% group_by(displacement_status) %>% summarize(
protection_ = weighted_mean(protection,.,group = !!get_group(.)),
shelter_ = weighted_mean(shelter,.,group = !!get_group(.))
)
lsg_three_four %>% group_by(displacement_status) %>% summarize(
protection_ = weighted_mean(protection,.,group = !!get_group(.)),
shelter_ = weighted_mean(shelter,.,group = !!get_group(.)),
shelterr = percent_response(vul_atlease_one,.,"yes",group = !!get_group(.))
)
lsg_three_four %>% group_by(displacement_status) %>% summarize(
protection_ = weighted_mean(protection,.,group = !!get_group(.)),
shelter_ = weighted_mean(shelter,.,group = !!get_group(.)),
fs_ = weighted_mean(fs_,.,group = !!get_group(.)),
health_ = weighted_mean(health,.,group = !!get_group(.)),
wash_ = weighted_mean(wash,.,group = !!get_group(.)),
education_ = weighted_mean(education,.,group = !!get_group(.)),
capacity_gap_ = weighted_mean(capacity_gap,.,group = !!get_group(.)),
) %>% write.csv("./persector.csv")
lsg_three_four %>% group_by(displacement_status) %>% summarize(
protection_ = weighted_mean(protection,.,group = !!get_group(.)),
shelter_ = weighted_mean(shelter,.,group = !!get_group(.)),
fs_ = weighted_mean(fs,.,group = !!get_group(.)),
health_ = weighted_mean(health,.,group = !!get_group(.)),
wash_ = weighted_mean(wash,.,group = !!get_group(.)),
education_ = weighted_mean(education,.,group = !!get_group(.)),
capacity_gap_ = weighted_mean(capacity_gap,.,group = !!get_group(.)),
) %>% write.csv("./persector.csv")
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
setnames(x = lsg_three_four,
old = c("protection", "shelter", "fs", "health", "wash", "education", "capacity_gap"),
new = c("Protection", "Shelter_NFI", "FSL", "Health", "WASH", "Education", "Capacity_gap"))
plot_set_percentages(data = lsg_three_four,
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
filter(lsg_three_four,vul_atlease_one=="yes")
plot_set_percentages(data = filter(lsg_three_four,vul_atlease_one=="yes"),
varnames = c("Protection","Shelter_NFI","FSL","Health","WASH","Education","Capacity_gap"),
mutually_exclusive_sets = T,
exclude_unique = F,
round_to_1_percent = F,
nintersects = 5,
weighting_function = weights)
